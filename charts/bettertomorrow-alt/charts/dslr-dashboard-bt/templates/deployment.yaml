apiVersion: apps/v1
kind: Deployment
metadata:
  name: dslr-dashboard-bt
  namespace: {{ .Release.Namespace }}
  labels:
    tier: frontend
    app: dslr-dashboard-bt
spec:
  selector:
    matchLabels:
      app: dslr-dashboard-bt
  replicas: 1
  template:
    metadata:
      labels:
        app: dslr-dashboard-bt
        run: dslr-dashboard-bt
    spec:
      hostname: dslr-dashboard-bt
      restartPolicy: Always
      nodeSelector:
        mode: "backend"
      imagePullSecrets:
        - name: imagepullsecret
      containers:
      - name: dslr-dashboard-bt
        #command: ["sleep"]
        #args: ["1d"]
        image: "{{ .Values.global.images.dslrDashboardBT }}"
        imagePullPolicy: {{ .Values.global.pullPolicy | default "IfNotPresent" }}
        readinessProbe:
          httpGet:
            path: /
            port: 8081
          initialDelaySeconds: 20
          periodSeconds: 5
          successThreshold: 2
          failureThreshold: 10
        ports:
        - name: dslr-dash-bt
          containerPort: 8081
        volumeMounts:
        - name: tz-config
          mountPath: /etc/localtime
          readOnly: true
        - name: cluster-local-cert-volume
          mountPath: "/usr/local/share/ca-certificates/cluster.local/"
          readOnly: true
        envFrom:
        - configMapRef:
            name: dslr-dashboard-bt-env
        - configMapRef:
            name: global-env
        env:
        - name: CONSUL_AGENT
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: CONSUL_SERVER
          value: $(CONSUL_AGENT)
        - name: API_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: SERVER_BASE_URL
          value: "http://$(API_IP)"
      volumes:
      - name: cluster-local-cert-volume
        secret:
          secretName: cluster-local-cert
      - name: tz-config
        hostPath:
           path: /etc/localtime
           type: File
