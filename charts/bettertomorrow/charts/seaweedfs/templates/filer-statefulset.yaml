{{- if .Values.filer.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "seaweedfs.name" . }}-filer
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "seaweedfs.name" . }}
    chart: {{ template "seaweedfs.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  serviceName: {{ template "seaweedfs.name" . }}-filer
  podManagementPolicy: Parallel
  replicas: {{ .Values.filer.replicas }}
  {{- if (gt (int .Values.filer.updatePartition) 0) }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: {{ .Values.filer.updatePartition }}
  {{- end }}  
  selector:
    matchLabels:
      app: {{ template "seaweedfs.name" . }}
      chart: {{ template "seaweedfs.chart" . }}
      release: {{ .Release.Name }}
      component: filer
  template:
    metadata:
      labels:
        app: {{ template "seaweedfs.name" . }}
        chart: {{ template "seaweedfs.chart" . }}
        release: {{ .Release.Name }}
        component: filer
    spec:
      restartPolicy: {{ default .Values.global.restartPolicy .Values.filer.restartPolicy }}
      {{- if .Values.filer.tolerations }}
      affinity:
        {{ tpl .Values.filer.affinity . | nindent 8 | trim }}
      {{- end }}
      {{- if .Values.filer.tolerations }}      
      tolerations:
        {{ tpl .Values.filer.tolerations . | nindent 8 | trim }}
      {{- end }}
      terminationGracePeriodSeconds: 60
      {{- if .Values.filer.priorityClassName }}
      priorityClassName: {{ .Values.filer.priorityClassName | quote }}
      {{- end }}
      containers:
        - name: seaweedfs
          image: "{{ default .Values.global.image .Values.filer.image }}"
          imagePullPolicy: {{ default .Values.global.imagePullPolicy .Values.filer.imagePullPolicy }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          command:
            - "/bin/sh"
            - "-ec"
            - |
              SEAWEEDFS_FULLNAME="{{ template "seaweedfs.name" . }}"

              exec /usr/bin/weed filer \
                -port={{ .Values.filer.port }} \
                {{- if .Values.filer.redirectOnRead }}
                -redirectOnRead \
                {{- end }}
                {{- if .Values.filer.disableHttp }}
                -disableHttp \
                {{- end }}
                {{- if .Values.filer.disableDirListing }}
                -disableDirListing \
                {{- end }}
                -dirListLimit={{ .Values.filer.dirListLimit }} \
                -ip=${POD_IP} \
                -master={{ range $index := until (.Values.master.replicas | int) }}${SEAWEEDFS_FULLNAME}-master-{{ $index }}.${SEAWEEDFS_FULLNAME}-master:{{ $.Values.master.port }}{{ if lt $index (sub ($.Values.master.replicas | int) 1) }},{{ end }}{{ end }}
          volumeMounts:
            - name : data-{{ .Release.Namespace }}
              mountPath: /data
            - name: filer-config
              readOnly: true
              mountPath: /etc/seaweedfs/filer.toml
              subPath: filer.toml
            {{- if .Values.global.enableSecurity }}
            - name: security-config
              readOnly: true
              mountPath: /etc/seaweedfs/security.toml
              subPath: security.toml
            - name: ca-cert
              readOnly: true
              mountPath: /usr/local/share/ca-certificates/ca/
            - name: master-cert
              readOnly: true
              mountPath: /usr/local/share/ca-certificates/master/
            - name: volume-cert
              readOnly: true
              mountPath: /usr/local/share/ca-certificates/volume/
            - name: filer-cert
              readOnly: true
              mountPath: /usr/local/share/ca-certificates/filer/
            - name: client-cert
              readOnly: true
              mountPath: /usr/local/share/ca-certificates/client/
            {{- end }}
            {{ tpl .Values.filer.extraVolumeMounts . | nindent 12 | trim }}
          ports:
            - containerPort: {{ .Values.filer.port }}
              name: swfs-filer
          # readinessProbe:
          #   # NOTE(mitchellh): when our HTTP status endpoints support the
          #   # proper status codes, we should switch to that. This is temporary.
          #   exec:
          #     command:
          #       - "/bin/sh"
          #       - "-ec"
          #       - |
          #         curl http://127.0.0.1:8500/v1/status/leader 2>/dev/null | \
          #         grep -E '".+"'
          #   failureThreshold: 2
          #   initialDelaySeconds: 5
          #   periodSeconds: 3
          #   successThreshold: 1
          #   timeoutSeconds: 5
          {{- if .Values.filer.resources }}
          resources:
            {{ tpl .Values.filer.resources . | nindent 12 | trim }}
          {{- end }}
      volumes:
        - name: filer-config
          configMap:
            name: {{ template "seaweedfs.name" . }}-filer-config
        {{- if .Values.global.enableSecurity }}
        - name: security-config
          configMap:
            name: {{ template "seaweedfs.name" . }}-security-config
        - name: ca-cert
          secret:
            secretName: {{ template "seaweedfs.name" . }}-ca-cert
        - name: master-cert
          secret:
            secretName: {{ template "seaweedfs.name" . }}-master-cert
        - name: volume-cert
          secret:
            secretName: {{ template "seaweedfs.name" . }}-volume-cert
        - name: filer-cert
          secret:
            secretName: {{ template "seaweedfs.name" . }}-filer-cert
        - name: client-cert
          secret:
            secretName: {{ template "seaweedfs.name" . }}-client-cert
        {{- end }}
        {{ tpl .Values.filer.extraVolumes . | indent 8 | trim }}
      {{- if .Values.filer.nodeSelector }}
      nodeSelector:
        {{ tpl .Values.filer.nodeSelector . | indent 8 | trim }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data-{{ .Release.Namespace }}
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.filer.storage }}
        {{- if .Values.filer.storageClass }}
        storageClassName: {{ .Values.filer.storageClass }}        
      {{- end }}
{{- end }}
