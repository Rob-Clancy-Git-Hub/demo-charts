apiVersion: v1
kind: ConfigMap
metadata:
  name: edge-env
  namespace: {{ .Release.Namespace }}
  labels:
    ConfigMap: edge-env
data:
    #missing env vars from docker buildkit
    PATH: "/pyconcrete:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    LD_LIBRARY_PATH: "/usr/local/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64"

    CONSUL_KEY_PREFIX: "backend"

    ## Turing Arch
{{- if .Values.turing }}
    memory_parameters_memories_sizes_mb_object_detection_gpu: "570"
    memory_parameters_memories_sizes_mb_object_detection_cpu: "2500"
    memory_parameters_memories_sizes_mb_feature_extraction_gpu: "1220"
    memory_parameters_memories_sizes_mb_feature_extraction_cpu: "1000"
{{- else }}
    memory_parameters_memories_sizes_mb_object_detection_gpu: "434"
    memory_parameters_memories_sizes_mb_object_detection_cpu: "2500"
    memory_parameters_memories_sizes_mb_feature_extraction_gpu: "1084"
    memory_parameters_memories_sizes_mb_feature_extraction_cpu: "1000"
{{- end }}

    ## services to start (init level)
    ENABLE_DOCKERIZE: "true"
    ENABLE_MKDIR: "true"
    ENABLE_CHMOD: "false"

    ENABLE_CONFD_TEMPLATER: "true"
    ENABLE_CONFD: "true"
    ENABLE_WATCHER: "true"
    ENABLE_BUFFER_CLEANER: "true"
    ENABLE_FRAMESTORE_CLEANER: "true"
    ENABLE_PROCESS_SERVICE: "true"
    ENABLE_REID_SERVICE: "false"
    ENABLE_TRACK_ARCHIVE_SERVICE: "false"
    ENABLE_COLLATE_SERVICE: "false"
    ENABLE_REDIS_SERVICE: "true"
    ENABLE_CRON_PIPE_IMG_TEMPORARY: "false"
    ENABLE_CRON_MASS_IMPORT_REPORTS: "true"

    ## logging services (init level)
    ENABLE_DOCKER_STDOUT: "true"
    ENABLE_DOCKER_LOG: "false"

    ## custom_ip_settings.json file
    flask_port: "4005"
    api_service_port: "5443"
    reid_service_port: "9069"
    collate_service_port: "9067"
    track_archive_service_port: "9068"
    redis_port: "6379"
    mongodb_port: "27017"

    tracking_tracking_storage_dir: "/root/track_archive_service_data/"
    paths_pipe_uuid_file_path: "/root/pipe_data/pipe_id"
    #paths_custom_ip_settings_path: "/root/pipe_data/custom_ip_settings_file.json"

    ## custom settings
    REID_DATA_SERVICE_GPU: "0"
    AGE_EXTRACTION_GPU: "0"
    FEATURE_EXTRACTION_GPU: "0"

    ## nvidia container runtime, https://github.com/nvidia/nvidia-container-runtime#environment-variables-oci-spec
    NVIDIA_VISIBLE_DEVICES: "all"
    NVIDIA_DRIVER_CAPABILITIES: "all"

    ## log level
    misc_log_level: "INFO"
    GLOG_minloglevel: "2"

    ENABLE_OPENSSH_SERVICE: "false"
    DISPLAY: ":1"
    #external_ip: "nginx.{{ .Release.Namespace }}.svc.cluster.local"
    storage_ip: "nginx.{{ .Release.Namespace }}.svc.cluster.local"
    frame_store_storage_ip: "nginx.{{ .Release.Namespace }}.svc.cluster.local"
    redis_host: "127.0.0.1"
    api_service_ip: "api.{{ .Release.Namespace }}.svc.cluster.local"
    mongodb_host: "mongodb.{{ .Release.Namespace }}.svc.cluster.local"
    reid_service_ip: "backend.{{ .Release.Namespace }}.svc.cluster.local"
    collate_service_ip: "collate-0.collate.{{ .Release.Namespace }}.svc.cluster.local"
    track_archive_service_ip: "backend.{{ .Release.Namespace }}.svc.cluster.local"
    images_storage_database_host: "seaweedfs-s3.{{ .Release.Namespace }}.svc.cluster.local"
    images_storage_database_port: "8333"
    images_storage_storage_type: "s3_objects_storage"
    # images_storage_database_secret_key: "{{ .Values.AWS_SECRET_KEY | default "secretKey1" }}"
    # images_storage_database_access_key_id: "{{ .Values.AWS_ACCESS_KEY | default "accessKey1" }}"
    # images_storage_database_database: "s3_scality"
    frame_store_rtmp_url: "rtstreamer.{{ .Release.Namespace }}.svc.cluster.local"
    frame_store_rtmp_port: "80"
    misc_gpu_encoding: "true"
    memsql_host: "memsql.{{ .Release.Namespace }}.svc.cluster.local"
    memsql_port: "3306"
    CHECK_NVIDIA_SMI: "true"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: supercronic-edge-configmap
  namespace: {{ .Release.Namespace }}
  labels:
    tier: backend
    app: supercronic-edge-configmap
data:
  crontab: |
    0 0 * * * [ -d "/var/www/html/pipe_store/pipe_img/" ] && /usr/bin/find /var/www/html/pipe_store/pipe_img/ -not -path /var/www/html/pipe_store/pipe_img/ -delete -print || true
    #0 1 * * * [ -d "/var/www/html/pipe_store/mass_import/" ] && /usr/bin/find /var/www/html/pipe_store/mass_import/ -not -path '/var/www/html/pipe_store/mass_import/' -mmin +1440 -delete
    #0 2 * * * [ -d "/var/www/html/pipe_store/video" ] && /usr/bin/find /var/www/html/pipe_store/video -mtime +${TO_DATE_TRACK_DELETE} -type f -name "*.mp4" -delete
    0 3 * * * [ -d "/var/www/html/frame_store" ] && /usr/bin/find /var/www/html/frame_store -mtime +$(curl -s -X GET http://${CONSUL_AGENT}:8500/v1/kv/api-env/TO_DATE_TRACK_DELETE?raw) -type f -delete -print
