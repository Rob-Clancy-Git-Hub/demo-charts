---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webrtc
  namespace: {{ .Release.Namespace }}
  labels:
    tier: backend
    app: webrtc
spec:
  selector:
    matchLabels:
      app: webrtc
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: webrtc
        run: webrtc
    spec:
      hostname: webrtc
      restartPolicy: Always
      nodeSelector:
        mode: "backend"
      imagePullSecrets:
        - name: imagepullsecret
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: webrtc-streamer
        image: "{{ .Values.global.images.webrtcStreamer }}"
        imagePullPolicy: {{ .Values.global.pullPolicy | default "IfNotPresent" }}
        ports:
        - containerPort: 8000
        readinessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 20
          periodSeconds: 5
          successThreshold: 2
          failureThreshold: 10
        volumeMounts:
        - name: tz-config
          mountPath: /etc/localtime
          readOnly: true
        - name: cluster-local-cert-volume
          mountPath: "/usr/local/share/ca-certificates/cluster.local/"
          readOnly: true
        envFrom:
        - configMapRef:
            name: global-env
        env:
        - name: WEBRTC_STREAMER_OPTIONS
          value: "-H0.0.0.0:8000 -w/webrtc-streamer/html"
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: STUN_URL
          value: $(HOST_IP):3478
        - name: TURN_URL
          value: webrtc:webrtc@$(HOST_IP):3478
        - name: WAN_MODE
          value: "false"
        - name: WAN_STUN_URL
          value: "stun.l.google.com:19302"
        - name: CONSUL_AGENT
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: CONSUL_SERVER
          value: $(CONSUL_AGENT)
        - name: WEBRTC_PROTOCOL
          value: "http:"
        - name: WEBRTC_HOST
          value: $(HOST_IP)
        - name: WEBRTC_PORT
          value: "80"
        - name: WEBRTC_PREFIX
          value: "/webrtc"
        - name: APIGATEWAY_IP
          value: $(HOST_IP)
          #value: "apigateway.{{ .Release.Namespace }}.svc.cluster.local"
        - name: APIGATEWAY_PROTOCOL
          value: "http"
          #value: "https"
        - name: APIGATEWAY_PORT
          value: "3000"
          #value: "9443"
        - name: NODE_RTSP_IP
          value: "rtstreamer.{{ .Release.Namespace }}.svc.cluster.local"
        - name: NODE_RTSP_PROTOCOL
          value: "rtsp"
        - name: NODE_RTSP_PORT
          value: "80"
        - name: CAMERA_INT_REQ_TIME
          value: "1000"
        - name: CRT_CA_BUNDLE
          value: "/usr/local/share/ca-certificates/tls.ai/server.full.with.key.pem"
        - name: USERNAME
          value: "admin"
        - name: PASSWORD
          value: "admin"
        - name: DISABLE_GATEWAY_AUTH
          value: "true"
      - name: coturn
        image: "{{ .Values.global.images.coturn }}"
        imagePullPolicy: {{ .Values.global.pullPolicy | default "IfNotPresent" }}
        ports:
        - containerPort: 3478
        readinessProbe:
          tcpSocket:
            port: 3478
          initialDelaySeconds: 20
          periodSeconds: 5
          successThreshold: 2
          failureThreshold: 10
        volumeMounts:
        - name: tz-config
          mountPath: /etc/localtime
          readOnly: true
        - name: cluster-local-cert-volume
          mountPath: "/usr/local/share/ca-certificates/cluster.local/"
          readOnly: true
        envFrom:
        - configMapRef:
            name: global-env
        env:
        - name: COTURN_CMD
          #value: "-v -n --log-file stdout --min-port 50000 --max-port 50100 --no-stun --no-multicast-peers --fingerprint --user webrtc:webrtc --lt-cred-mech --realm tls.ai --cert /usr/local/share/ca-certificates/cluster.local/tls.crt --pkey /usr/local/share/ca-certificates/cluster.local/tls.key"
          value: "-v -n --log-file stdout --min-port 50000 --max-port 50100 --no-stun --no-multicast-peers --fingerprint --user webrtc:webrtc --lt-cred-mech --realm default.svc.cluster.local"
        - name: CONSUL_AGENT
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: CONSUL_SERVER
          value: $(CONSUL_AGENT)
      volumes:
      - name: cluster-local-cert-volume
        secret:
          secretName: cluster-local-cert
      - name: tz-config
        hostPath:
           path: /etc/localtime
           type: File
