---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rtstreamer
  namespace: {{ .Release.Namespace }}
  labels:
    tier: frontend
    app: rtstreamer
spec:
  selector:
    matchLabels:
      app: rtstreamer
  replicas: 1
  template:
    metadata:
      labels:
        app: rtstreamer
        run: rtstreamer
    spec:
      hostname: webrtc
      restartPolicy: Always
      nodeSelector:
        mode: "backend"
      imagePullSecrets:
        - name: imagepullsecret
      containers:
      - name: rtstreamer
        image: "{{ .Values.global.images.rtstreamer }}"
        imagePullPolicy: {{ .Values.global.pullPolicy | default "IfNotPresent" }}
        ports:
        - containerPort: 80
        - containerPort: 1935
        readinessProbe:
          httpGet: 
            path: /
            port: 80
          initialDelaySeconds: 20
          periodSeconds: 5 
          successThreshold: 2
          failureThreshold: 10        
        volumeMounts:
        - name: tz-config
          mountPath: /etc/localtime
          readOnly: true
        envFrom:
        - configMapRef:
            name: global-env
        env:
        - name: CONSUL_AGENT
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: CONSUL_SERVER
          value: $(CONSUL_AGENT)
      volumes:
      - name: tz-config
        hostPath:
           path: /etc/localtime
           type: File
